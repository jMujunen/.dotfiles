{
  "models": [
    {
      "title": "Deepseek Coder 6.7B:6000",
      "provider": "ollama",
      "model": "deepseek-coder:6.7b",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 4000
    },
    {
      "title": "CodeGeex4:4096",
      "provider": "ollama",
      "model": "codegeex4:9b",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 4096
    },
    {
      "title": "Deepseek V2:4096",
      "provider": "ollama",
      "model": "deepseek-coder-v2:latest",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 4096
    },
    {
      "title": "qwen2.5-code:4096",
      "provider": "ollama",
      "model": "qwen2.5-coder:latest",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 4096
    },
    {
      "title": "Ollama",
      "provider": "ollama",
      "model": "AUTODETECT",
      "apiBase": "http://10.0.0.21:11434"
    }
  ],
  "completionOptions": {
    "temperature": 0.2,
    // "mirostat": 1,
    "keepAlive": 30,
    "numThreads": 18,
    "maxTokens": 1500
    // "topK": 5,
    // "topP": 0.9
  },
  "tabAutocompleteModel": [
    {
      "title": "Deepseek Coder 6.7B",
      "provider": "ollama",
      "model": "deepseek-coder:6.7b",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 2560
    },
    {
      "title": "qwen2.5-7B:2048",
      "provider": "ollama",
      "model": "qwen2.5-coder:latest",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 2048,
      "completionOptions": {
        "maxTokens": 64
      }
    },
    {
      "title": "qwen2.5-7B_base_Q5:2048",
      "provider": "ollama",
      "model": "qwen2.5-coder:7b-base-q5_K_M",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 1024,
      "completionOptions": {
        "maxTokens": 64
      }
    },
    {
      "title": "Deepseek V2",
      "provider": "ollama",
      "model": "deepseek-coder-v2:latest",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 1024,
      "completionOptions": {
        "maxTokens": 64
      }
    },
    {
      "title": "codegeex4:9b",
      "provider": "ollama",
      "model": "codegeex4:2048",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 1600,
      "completionOptions": {
        "temperature": 0.2,
        "maxTokens": 64
      }
    }
  ],
  "tabAutocompleteOptions": {
    "useCopyBuffer": false,
    "multilineCompletions": "auto",
    // "maxPromptTokens": 256,
    "useCache": true,
    "useOtherFiles": true,
    "disable": false,
    "useFileSuffix": true,
    "maxSuffixPercentage": 30,
    "debounceDelay": 100
  },
  "embeddingsProvider": {
    "provider": "ollama",
    "model": "mxbai-embed-large:latest",
    "apiBase": "http://10.0.0.21:11434",
    "maxChunkSize": 768
  },
  "slashCommands": [
    {
      "name": "commit",
      "description": "Task: Based on the provided git diff, generate a title and optional description. Ensure that it includes a precise and informative subject line that succinctly summarizes the crux of the changes. If the provided git diff is complex, follow with an explanatory body. This explanatory body will provide insight into the nature of the changes, the reasoning behind them, and any significant consequences or considerations arising from them. Constraints: You should strictly output the commit message without any additional information or comments. The output should only contain the commit message itself.\nGuidelines:\n- Succinctly summarizes the crux of the changes\n- Title should be a single line and under 40 characters long.\n- Focus on the changes as a whole instead of independant changes.\n- Limit the line length to 80 characters.\n- Use the body of the commit message to provide more detailed information if necessary"
    },
    {
      "name": "edit",
      "description": "Edit selected code"
    },
    {
      "name": "comment",
      "description": "Write well-formatted comments for the given code, including both multi-line and single-line comments"
    },
    {
      "name": "share",
      "description": "Export the current chat session to markdown"
    }
  ],
  "customCommands": [
    {
      "name": "Explain",
      "prompt": "{{{ input }}}\n\n Explain the following code snippet: ",
      "description": "Anaylize the given code snippet and explain what it's trying to acheive and how"
    },
    {
      "name": "unit tests",
      "prompt": "{{{ input }}}\n\nWrite a comprehensive set of unit tests for the selected code. It should setup, run tests that check for correctness including important edge cases, and teardown. Ensure that the tests are complete and sophisticated. Give the tests just as chat output, don't edit any file.",
      "description": "Write unit tests for highlighted code"
    },
    {
      "name": "check for bugs",
      "description": "Check for mistakes in my code",
      "prompt": "{{{ input }}}\n\nPlease read the highlighted code and check for any mistakes. You should look for the following, and be extremely vigilant:\n- Syntax errors\n- Logic errors\n- Security vulnerabilities\n- Performance issues\n- Anything else that looks wrong\n\nOnce you find an error, please explain it as clearly as possible, but without using extra words. For example, instead of saying 'I think there is a syntax error on line 5', you should say 'Syntax error on line 5'. Give your answer as one bullet point per mistake found."
    },
    {
      "name": "improveperformance",
      "description": "Improve performance of this code",
      "prompt": "{{{ input }}}\n\nPlease review the highlighted code and suggest ways to improve its performance. You should focus on improving time complexity, space complexity or both."
    },
    {
      "name": "formattedDocstrings",
      "description": "reStructured text formmated docstring generator",
      "prompt": "{{{ input }}}\n\nPlease write a docstrings for each function, method and class in the highlighted code. The docstring should follow pep-287 which defines the google docstring format markdown formatting"
    },
    {
      "name": "Suggest Improvments",
      "description": "Suggest general high level improvments",
      "prompt": "Review this code and suggest ways to improve it. You should focus on improving time complexity, space complexity, readability, conventions, bad practices, among others"
    }
  ],
  "ui": {
    "codeBlockToolbarPosition": "bottom",
    "fontSize": 13,
    "displayRawMarkdown": false,
    "showChatScrollbar": true
  },
  "contextProviders": [
    {
      "name": "outline",
      "params": {}
    },
    {
      "name": "code",
      "params": {}
    },
    {
      "name": "docs",
      "params": {}
    },
    {
      "name": "diff",
      "params": {}
    },
    {
      "name": "terminal",
      "params": {}
    },
    {
      "name": "problems",
      "params": {}
    },
    {
      "name": "folder",
      "params": {}
    },
    {
      "name": "codebase",
      "params": {}
    },
    {
      "name": "stagedCommit",
      "params": {}
    }
  ],
  "docs": [
    {
      "title": "Continue",
      "startUrl": "https://docs.continue.dev/intro",
      "rootUrl": "https://docs.continue.dev",
      "faviconUrl": "https://docs.continue.dev/favicon.ico",
      "maxDepth": 5
    },
    {
      "title": "Kitty",
      "startUrl": "https://sw.kovidgoyal.net/kitty/overview",
      "rootUrl": "https://sw.kovidgoyal.net/kitty/",
      "maxDepth": 3,
      "favicon": "https://sw.kovidgoyal.net/kitty/_static/kitty.svg"
    }
  ],
  "experimental": {
    "readResponseTTS": true,
    "contextMenuPrompts": {
      "comment": "Write comments for this code. Do not change anything about the code itself.",
      "docstring": "Write a docstring for this code. Do not change anything about the code itself.",
      "fix": "Fix this code",
      "fixGrammar": "If there are any grammar or spelling mistakes in this writing, fix them. Do not make other large changes to the writing.",
      "optimize": "Optimize this code"
    },
    "quickActions": [
      {
        "title": "Unit test",
        "prompt": "Write a unit test for this code. Do not change anything about the code itself.",
        "sendToChat": true
      },
      {
        "title": "Docstring",
        "prompt": "Write a docstrings for this code. The docstring should follow pep-287 which defines the google docstring markdown format . Do not change anything about the code itself."
      },
      {
        "title": "Comment",
        "prompt": "Write well-formatted comments for the given code, including both multi-line and single-line comments"
      },
      {
        "title": "Bug Check",
        "prompt": "Check and fix this code for any mistakes. You should check/fix the following, and be extremely vigilant:\n- Syntax errors\n- Logic errors\n- Security vulnerabilities\n- Performance issues\n- Anything else that looks wrong"
      },
      {
        "title": "Type Hints",
        "prompt": "Add type hints to this code without changing the core functionality"
      }
    ]
  },
  "allowAnonymousTelemetry": false
}