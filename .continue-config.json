{
  "models": [
    {
      "title": "Deepseek Coder 6.7B",
      "provider": "ollama",
      "model": "deepseek-coder:6.7b",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 6000
    },
    {
      "title": "CodeGeex4",
      "provider": "ollama",
      "model": "codegeex4:9b",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 2048
    },
    {
      "title": "WizardCoder",
      "provider": "ollama",
      "model": "wizardcoder:4096",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 4096
    },
    {
      "title": "Deepseek V2",
      "provider": "ollama",
      "model": "deepseek-coder-v2:latest",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 2048
    },
    {
      "title": "Mistral Nemo:12b",
      "provider": "ollama",
      "model": "mistral-nemo:12b",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 2048
    },
    {
      "title": "Codegemma-Code 7B",
      "provider": "ollama",
      "model": "codegemma:7b-code",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 2048
    }
  ],
  "completionOptions": {
    "temperature": 0.4,
    // "mirostat": 1,
    "keepAlive": 60,
    "numThreads": 10,
    "maxTokens": 1024
    // "topK": 10,
    // "topP": 0.9
  },
  "tabAutocompleteModel": [
    {
      "title": "Deepseek Coder 6.7B",
      "provider": "ollama",
      "model": "deepseek-coder:6.7b",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 2048
    },
    {
      "title": "WizardCoder",
      "provider": "ollama",
      "model": "wizardcoder:4096",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 2048
    },
    {
      "title": "StarCoder2 7B",
      "provider": "ollama",
      "model": "starcoder2:7b",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 8196
    },
    // {
    //   "title": "Deepseek Coder V2",
    //   "provider": "ollama",
    //   "model": "deepseek-coder-v2:16b-lite-instruct-q2_K",
    //   "apiBase": "http://10.0.0.21:11434",
    //   "contextLength": 512
    // },
    {
      "title": "codegeex4:9b",
      "provider": "ollama",
      "model": "codegeex4:9b",
      "apiBase": "http://10.0.0.21:11434",
      "contextLength": 2024
    }
  ],
  "tabAutocompleteOptions": {
    "temperature": 0.2,
    "useCopyBuffer": false,
    // "maxPromptTokens": 120,
    "multilineCompletions": "auto",
    "useCache": true,
    "useOtherFiles": true,
    "disable": false,
    "useSuffix": true,
    "maxSuffixPercentage": 20
  },
  "embeddingsProvider": {
    "provider": "ollama",
    "model": "mxbai-embed-large:latest",
    "apiBase": "http://10.0.0.21:11434"
  },
  "slashCommands": [
    {
      "name": "comment",
      "description": "Add comment to the highlighted code"
    },
    {
      "name": "cmd",
      "description": "Generate a shell command"
    },
    {
      "name": "edit",
      "description": "Edit the highlighted code",
      "params": {
        "recap": true
      }
    },
    {
      "name": "review",
      "description": "Review the highlighted code snippet for potential improvements."
    },
    {
      "name": "commit",
      "description": "Generate a commit message"
    }
  ],
  "ui": {
    "codeBlockToolbarPosition": "bottom",
    "fontSize": 13,
    "displayRawMarkdown": false
  },
  "experimental": {
    "contextMenuPrompts": {
      "comment": "Add comments for this code without modifying the code itself.",
      "optimize": "Optimize this code",
      "docstring": "Write a docstring for this code. Do not change anything about the code itself."
    },
    // "defaultContext": [
    //   "activeFile"
    // ],
    "modelRoles": {
      "inlineEdit": "comment"
    },
    // {
    // "contextMenuPrompts": {
    //   "docstring": "Write a docstring for this code. Do not change anything about the code itself.",
    //   "optimize": "Optimize this code",
    //   "comment": "Write comments for this code. Do not change anything about the code itself.",
    //   "fix": "Fix this code",
    //   "fixGrammar": "If there are any grammar or spelling mistakes in this writing, fix them. Do not make other large changes to the writing."
    // },
    "quickActions": [
      {
        "title": "Comment",
        "prompt": "Add comments this code to explain each significant step"
      },
      {
        "title": "Unit test",
        "prompt": "Write a unit test for this code. Do not change anything about the code itself."
      },
      {
        "title": "Docstring",
        "prompt": "Write a docstring for this code. Do not change anything about the code itself."
      },
      {
        "title": "Fix grammar",
        "prompt": "If there are any grammatical errors in this code, fix them. Do not make other large changes to the code."
      },
      {
        "title": "Optimize",
        "prompt": "Improve this code without changing its functionality."
      },
      {
        "title": "Clean",
        "prompt": "Clean up this code for better readability  without changing its functionality."
      }
    ]
  },
  "contextProviders": [
    {
      "name": "diff"
    },
    {
      "name": "docs"
    },
    {
      "name": "codebase"
    },
    {
      "name": "folder"
    },
    {
      "name": "currentFile"
    },
    {
      "name": "code"
    },
    {
      "name": "open",
      "params": {
        "onlyPinned": false
      }
    },
    {
      "name": "url"
    }
  ],
  "customCommands": [
    {
      "name": "Explain",
      "prompt": "{{{ input }}}\n\n Explain the following code snippet: ",
      "description": "Anaylize the given code snippet and explain what it's trying to acheive and how"
    },
    {
      "name": "unit tests",
      "prompt": "{{{ input }}}\n\nWrite a comprehensive set of unit tests for the selected code. It should setup, run tests that check for correctness including important edge cases, and teardown. Ensure that the tests are complete and sophisticated. Give the tests just as chat output, don't edit any file.",
      "description": "Write unit tests for highlighted code"
    },
    {
      "name": "check for bugs",
      "description": "Check for mistakes in my code",
      "prompt": "{{{ input }}}\n\nPlease read the highlighted code and check for any mistakes. You should look for the following, and be extremely vigilant:\n- Syntax errors\n- Logic errors\n- Security vulnerabilities\n- Performance issues\n- Anything else that looks wrong\n\nOnce you find an error, please explain it as clearly as possible, but without using extra words. For example, instead of saying 'I think there is a syntax error on line 5', you should say 'Syntax error on line 5'. Give your answer as one bullet point per mistake found."
    },
    {
      "name": "customcomment",
      "description": "Comment this code",
      "prompt": "{{{ input }}}\n\nPlease read the highlighted code and determine where you should insert a comment or a docstring. Prioritize comments that describe why the code is there, or in otherwords, why is the code written this way. Never add comments to describe what the code does, assume that part is obvious:For example:\nInstead of writing '# Iterate through the files' write '# Determine number of files for (some_purpose) to initialze progress bar'"
    },
    {
      "name": "improveperformance",
      "description": "Improve performance of this code",
      "prompt": "{{{ input }}}\n\nPlease review the highlighted code and suggest ways to improve its performance. You should focus on improving time complexity, space complexity or both."
    },
    {
      "name": "suggestimprovements",
      "description": "Suggest improvements to this code",
      "prompt": "{{{ input }}}\n\nPlease review the highlighted code and suggest ways to make it better. You should focus on improving readability, maintainability or both."
    },
    {
      "name": "formattedDocstrings",
      "description": "reStructured text formmated docstring generator",
      "prompt": "{{{ input }}}\n\nPlease write a docstrings for each function, method and class in the highlighted code. The docstring should follow pep-287 which defines the reStructuredText formatting"
    }
  ],
  "allowAnonymousTelemetry": false,
  "docs": []
}